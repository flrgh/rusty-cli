name: matrix deps

on:
  push: {}
  workflow_call: {}

defaults:
  run:
    shell: bash

jobs:
  build-matrix:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [postgres, redis]

    outputs:
      services: ${{ steps.generate.outputs.services }}
      matrix: ${{ steps.generate.outputs.matrix }}

    steps:
      - name: generate
        id: generate
        env:
          SERVICE: ${{ matrix.service }}
        run: |
          SERVICES='{"postgres":{"postgres":{"image":"postgres:13","env":{"POSTGRES_USER":"test","POSTGRES_DB":"test"},"ports":["5432:5432"]}},"redis":{"redis":{"image":"redis","ports":["6379:6379","6380:6380"]}},"all":{"postgres":{"image":"postgres:13","env":{"POSTGRES_USER":"test","POSTGRES_DB":"test"},"ports":["5432:5432"]},"redis":{"image":"redis","ports":["6379:6379","6380:6380"]}}}'
          MATRIX='{"services":["all","postgres","redis"]}'

          {
            echo "services=${SERVICES}"
            echo "matrix=${MATRIX}"
          } >> $GITHUB_OUTPUT

  run-with-services:
    needs: [build-matrix]

    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ fromJSON(needs.build-matrix.outputs.matrix) }}

    services: ${{ fromJSON(needs.build-matrix.outputs.services)[matrix.services] }}

    steps:
      - name: full services output
        env:
          SERVICES: ${{ toJSON(fromJSON(needs.build-matrix.outputs.services)) }}
        run: echo "$SERVICES"

      - name: matrix services
        env:
          SERVICES: ${{ toJSON(fromJSON(needs.build-matrix.outputs.services)[matrix.services]) }}
        run: echo "$SERVICES"

      - name: Dump needs context
        env:
          GITHUB_CONTEXT: ${{ toJson(needs) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"

      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"

      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
